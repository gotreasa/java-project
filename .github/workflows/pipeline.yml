name: Pipeline

env:
  JAVA_VERSION: '17'
  JAVA_DISTRIBUTION: 'temurin'

permissions:
  checks: write

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  commitlint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@main
        with:
          fetch-depth: 0
      - uses: wagoid/commitlint-github-action@master

  checkstyle:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@main
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: "${{ env.JAVA_VERSION }}"
          distribution: "${{ env.JAVA_DISTRIBUTION }}"
          cache: 'gradle'
      - name: Check codestyle
        run: ./gradlew checkstyleMain checkstyleTest checkstyleIntegrationTest --no-daemon

  snyk:
    runs-on: ubuntu-latest
    needs: [checkstyle]
    steps:
      - name: Checkout the code
        uses: actions/checkout@main
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: "${{ env.JAVA_VERSION }}"
          distribution: "${{ env.JAVA_DISTRIBUTION }}"
          cache: 'gradle'
      - name: Snyk
        env:
          SNYK_TOKEN: "${{ secrets.SNYK_TOKEN }}"
        run: ./gradlew snyk-test --no-daemon

  test-and-report:
    runs-on: ubuntu-latest
    needs: [checkstyle]
    steps:
      - name: Checkout the code
        uses: actions/checkout@main
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: "${{ env.JAVA_VERSION }}"
          distribution: "${{ env.JAVA_DISTRIBUTION }}"
          cache: 'gradle'
      - name: Test
        run: ./gradlew test --no-daemon
      - name: Coverage report and further checks
        run: ./gradlew check --no-daemon
      - name: Sonar
        env:
          SONAR_TOKEN: "${{ secrets.SONAR_TOKEN }}"
        run: ./gradlew sonar --no-daemon
